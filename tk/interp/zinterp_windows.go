// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package interp

import (
	"syscall"
	"unsafe"
)

var _ unsafe.Pointer

// Do the interface allocations only once for common
// Errno values.
const (
	errnoERROR_IO_PENDING = 997
)

var (
	errERROR_IO_PENDING error = syscall.Errno(errnoERROR_IO_PENDING)
)

// errnoErr returns common boxed Errno values, to prevent
// allocations at runtime.
func errnoErr(e syscall.Errno) error {
	switch e {
	case 0:
		return nil
	case errnoERROR_IO_PENDING:
		return errERROR_IO_PENDING
	}
	// TODO: add more here, after collecting data on the common
	// error values see on Windows. (perhaps when running
	// all.bat?)
	return e
}

var (
	modtcl86t = syscall.NewLazyDLL("tcl86t.dll")
	modtk86t  = syscall.NewLazyDLL("tk86t.dll")

	procTcl_CreateInterp      = modtcl86t.NewProc("Tcl_CreateInterp")
	procTcl_DeleteInterp      = modtcl86t.NewProc("Tcl_DeleteInterp")
	procTcl_Alloc             = modtcl86t.NewProc("Tcl_Alloc")
	procTcl_Eval              = modtcl86t.NewProc("Tcl_Eval")
	procTcl_EvalEx            = modtcl86t.NewProc("Tcl_EvalEx")
	procTcl_GetStringResult   = modtcl86t.NewProc("Tcl_GetStringResult")
	procTcl_GetObjResult      = modtcl86t.NewProc("Tcl_GetObjResult")
	procTcl_GetWideIntFromObj = modtcl86t.NewProc("Tcl_GetWideIntFromObj")
	procTcl_GetDoubleFromObj  = modtcl86t.NewProc("Tcl_GetDoubleFromObj")
	procTcl_GetBooleanFromObj = modtcl86t.NewProc("Tcl_GetBooleanFromObj")
	procTcl_GetStringFromObj  = modtcl86t.NewProc("Tcl_GetStringFromObj")
	procTcl_NewWideIntObj     = modtcl86t.NewProc("Tcl_NewWideIntObj")
	procTcl_NewDoubleObj      = modtcl86t.NewProc("Tcl_NewDoubleObj")
	procTcl_NewBooleanObj     = modtcl86t.NewProc("Tcl_NewBooleanObj")
	procTcl_NewStringObj      = modtcl86t.NewProc("Tcl_NewStringObj")
	procTcl_Init              = modtcl86t.NewProc("Tcl_Init")
	procTcl_GetCurrentThread  = modtcl86t.NewProc("Tcl_GetCurrentThread")
	procTcl_ThreadQueueEvent  = modtcl86t.NewProc("Tcl_ThreadQueueEvent")
	procTcl_ThreadAlert       = modtcl86t.NewProc("Tcl_ThreadAlert")
	procTcl_CreateObjCommand  = modtcl86t.NewProc("Tcl_CreateObjCommand")
	procTcl_CreateCommand     = modtcl86t.NewProc("Tcl_CreateCommand")
	procTcl_SetObjResult      = modtcl86t.NewProc("Tcl_SetObjResult")
	procTcl_WrongNumArgs      = modtcl86t.NewProc("Tcl_WrongNumArgs")
	procTk_Init               = modtk86t.NewProc("Tk_Init")
	procTk_MainLoop           = modtk86t.NewProc("Tk_MainLoop")
)

func Tcl_CreateInterp() (interp *Tcl_Interp) {
	r0, _, _ := syscall.Syscall(procTcl_CreateInterp.Addr(), 0, 0, 0, 0)
	interp = (*Tcl_Interp)(unsafe.Pointer(r0))
	return
}

func Tcl_DeleteInterp(interp *Tcl_Interp) {
	syscall.Syscall(procTcl_DeleteInterp.Addr(), 1, uintptr(unsafe.Pointer(interp)), 0, 0)
	return
}

func Tcl_Alloc(size uint) (r *Tcl_Event) {
	r0, _, _ := syscall.Syscall(procTcl_Alloc.Addr(), 1, uintptr(size), 0, 0)
	r = (*Tcl_Event)(unsafe.Pointer(r0))
	return
}

func Tcl_Eval(interp *Tcl_Interp, script *byte) (r int32) {
	r0, _, _ := syscall.Syscall(procTcl_Eval.Addr(), 2, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(script)), 0)
	r = int32(r0)
	return
}

func Tcl_EvalEx(interp *Tcl_Interp, script *byte, length int32, flags int32) (r int32) {
	r0, _, _ := syscall.Syscall6(procTcl_EvalEx.Addr(), 4, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(script)), uintptr(length), uintptr(flags), 0, 0)
	r = int32(r0)
	return
}

func Tcl_GetStringResult(interp *Tcl_Interp) (ret *byte) {
	r0, _, _ := syscall.Syscall(procTcl_GetStringResult.Addr(), 1, uintptr(unsafe.Pointer(interp)), 0, 0)
	ret = (*byte)(unsafe.Pointer(r0))
	return
}

func Tcl_GetObjResult(interp *Tcl_Interp) (obj *Tcl_Obj) {
	r0, _, _ := syscall.Syscall(procTcl_GetObjResult.Addr(), 1, uintptr(unsafe.Pointer(interp)), 0, 0)
	obj = (*Tcl_Obj)(unsafe.Pointer(r0))
	return
}

func Tcl_GetWideIntFromObj(interp *Tcl_Interp, obj *Tcl_Obj, out *Tcl_WideInt) (status int32) {
	r0, _, _ := syscall.Syscall(procTcl_GetWideIntFromObj.Addr(), 3, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(obj)), uintptr(unsafe.Pointer(out)))
	status = int32(r0)
	return
}

func Tcl_GetDoubleFromObj(interp *Tcl_Interp, obj *Tcl_Obj, out *Tcl_Double) (status int32) {
	r0, _, _ := syscall.Syscall(procTcl_GetDoubleFromObj.Addr(), 3, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(obj)), uintptr(unsafe.Pointer(out)))
	status = int32(r0)
	return
}

func Tcl_GetBooleanFromObj(interp *Tcl_Interp, obj *Tcl_Obj, out *int32) (status int32) {
	r0, _, _ := syscall.Syscall(procTcl_GetBooleanFromObj.Addr(), 3, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(obj)), uintptr(unsafe.Pointer(out)))
	status = int32(r0)
	return
}

func Tcl_GetStringFromObj(obj *Tcl_Obj, length *int32) (ret *byte) {
	r0, _, _ := syscall.Syscall(procTcl_GetStringFromObj.Addr(), 2, uintptr(unsafe.Pointer(obj)), uintptr(unsafe.Pointer(length)), 0)
	ret = (*byte)(unsafe.Pointer(r0))
	return
}

func Tcl_NewWideIntObj(value Tcl_WideInt) (obj *Tcl_Obj) {
	r0, _, _ := syscall.Syscall(procTcl_NewWideIntObj.Addr(), 1, uintptr(value), 0, 0)
	obj = (*Tcl_Obj)(unsafe.Pointer(r0))
	return
}

func Tcl_NewDoubleObj(value Tcl_Double) (obj *Tcl_Obj) {
	r0, _, _ := syscall.Syscall(procTcl_NewDoubleObj.Addr(), 1, uintptr(value), 0, 0)
	obj = (*Tcl_Obj)(unsafe.Pointer(r0))
	return
}

func Tcl_NewBooleanObj(value int32) (obj *Tcl_Obj) {
	r0, _, _ := syscall.Syscall(procTcl_NewBooleanObj.Addr(), 1, uintptr(value), 0, 0)
	obj = (*Tcl_Obj)(unsafe.Pointer(r0))
	return
}

func Tcl_NewStringObj(bytes *byte, length int32) (obj *Tcl_Obj) {
	r0, _, _ := syscall.Syscall(procTcl_NewStringObj.Addr(), 2, uintptr(unsafe.Pointer(bytes)), uintptr(length), 0)
	obj = (*Tcl_Obj)(unsafe.Pointer(r0))
	return
}

func Tcl_Init(interp *Tcl_Interp) (r int32) {
	r0, _, _ := syscall.Syscall(procTcl_Init.Addr(), 1, uintptr(unsafe.Pointer(interp)), 0, 0)
	r = int32(r0)
	return
}

func Tcl_GetCurrentThread() (threadid *Tcl_ThreadId) {
	r0, _, _ := syscall.Syscall(procTcl_GetCurrentThread.Addr(), 0, 0, 0, 0)
	threadid = (*Tcl_ThreadId)(unsafe.Pointer(r0))
	return
}

func Tcl_ThreadQueueEvent(threadId *Tcl_ThreadId, evPtr *Tcl_Event, positon Tcl_QueuePosition) {
	syscall.Syscall(procTcl_ThreadQueueEvent.Addr(), 3, uintptr(unsafe.Pointer(threadId)), uintptr(unsafe.Pointer(evPtr)), uintptr(positon))
	return
}

func Tcl_ThreadAlert(threadId *Tcl_ThreadId) {
	syscall.Syscall(procTcl_ThreadAlert.Addr(), 1, uintptr(unsafe.Pointer(threadId)), 0, 0)
	return
}

func Tcl_CreateObjCommand(interp *Tcl_Interp, cmdName *byte, proc uintptr, clientData uintptr, deleteProc uintptr) (cmd *Tcl_Command) {
	r0, _, _ := syscall.Syscall6(procTcl_CreateObjCommand.Addr(), 5, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(cmdName)), uintptr(proc), uintptr(clientData), uintptr(deleteProc), 0)
	cmd = (*Tcl_Command)(unsafe.Pointer(r0))
	return
}

func Tcl_CreateCommand(interp *Tcl_Interp, cmdName *byte, proc uintptr, clientData uintptr, deleteProc uintptr) (cmd *Tcl_Command) {
	r0, _, _ := syscall.Syscall6(procTcl_CreateCommand.Addr(), 5, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(cmdName)), uintptr(proc), uintptr(clientData), uintptr(deleteProc), 0)
	cmd = (*Tcl_Command)(unsafe.Pointer(r0))
	return
}

func Tcl_SetObjResult(interp *Tcl_Interp, resultObjPtr *Tcl_Obj) {
	syscall.Syscall(procTcl_SetObjResult.Addr(), 2, uintptr(unsafe.Pointer(interp)), uintptr(unsafe.Pointer(resultObjPtr)), 0)
	return
}

func Tcl_WrongNumArgs(interp *Tcl_Interp, objc int32, objv uintptr, message *byte) {
	syscall.Syscall6(procTcl_WrongNumArgs.Addr(), 4, uintptr(unsafe.Pointer(interp)), uintptr(objc), uintptr(objv), uintptr(unsafe.Pointer(message)), 0, 0)
	return
}

func Tk_Init(interp *Tcl_Interp) (r int32) {
	r0, _, _ := syscall.Syscall(procTk_Init.Addr(), 1, uintptr(unsafe.Pointer(interp)), 0, 0)
	r = int32(r0)
	return
}

func Tk_MainLoop() {
	syscall.Syscall(procTk_MainLoop.Addr(), 0, 0, 0, 0)
	return
}
